

# This file was *autogenerated* from the file resource_measurement.sage
from sage.all_cmdline import *   # import sage library

_sage_const_0 = Integer(0); _sage_const_2 = Integer(2); _sage_const_1 = Integer(1); _sage_const_3 = Integer(3); _sage_const_22 = Integer(22); _sage_const_26 = Integer(26)
from sage.all import *

TOF_new = _sage_const_0 
CNOT_new = _sage_const_0 
TOF_origin = _sage_const_0 
CNOT_origin = _sage_const_0 


R = PolynomialRing(QQ, names=('n', 'logn',)); (n, logn,) = R._first_ngens(2)

############## New Resource Measurement ###############

sum_1 = _sage_const_2 *n - _sage_const_1 
sum_Lambda = n**_sage_const_2  - _sage_const_1 
sum_lambda = _sage_const_3 /_sage_const_2 *n**_sage_const_2  - _sage_const_3 /_sage_const_2 *n

TOF = _sage_const_0 
CNOT = _sage_const_0 

# for i in range(2*n - 1):
CNOT += _sage_const_0                                    # v <- RIGHTSHIFT(v)
TOF += _sage_const_1  * sum_1                            # a <- TOF(sign, g[0], a)
TOF += _sage_const_1  * sum_1                            # b <- TOF(sign, g[0] + 1, b)

CNOT += _sage_const_2 *(n+_sage_const_1 ) * sum_1                     # f, g <- CSWAP_a(f[n...0],g[n...0])
TOF += (n+_sage_const_1 ) * sum_1

CNOT += _sage_const_2  * (sum_lambda + sum_1)            # v, r <- CSWAP_a(v[lambda...0],r[lambda...0])
TOF += sum_lambda + sum_1

# CNOT += ??
TOF += sum_Lambda + (_sage_const_1 /_sage_const_2 *n**_sage_const_2  + _sage_const_1 /_sage_const_2 *n -_sage_const_1 ) - sum_1 # g[n...1] <- CTOF_WITH_UNARY_ITERATION(mask, g[0], f[Lambda...1], g[Lambda...1])

CNOT += sum_1 * (_sage_const_2  * logn + _sage_const_3 )
#TOF += sum_1 * (18 * logn + 4)              # mask <- INC_b(mask) // use 1 more ancilla qubit then CTOF = 2 TOF + (logn + 1) ancilla(for increment)
TOF += sum_1 * (_sage_const_3 *logn - _sage_const_2 )
 
#TOF += 1 * sum_1                            # b <- TOF(sign, g[0] + 1, b)
TOF += _sage_const_0 

CNOT += sum_1 * (_sage_const_2  * logn + _sage_const_3 )
#TOF += (logn + 1) * sum_1 + sum_1 * (18 * logn + 4) # mask <- C^n-INC(mask) // use 1 more ancilla qubit + (logn + 2) ancilla(large control part) + (logn + 1) ancilla(for increment)
TOF += (logn + _sage_const_1 ) * sum_1 + sum_1 * (_sage_const_3  * logn - _sage_const_2 )

CNOT += sum_1                               # delta <- CNOT(a, delta)

CNOT += (_sage_const_2 *logn + _sage_const_3 ) * sum_1                # delta <- INC_(1+a)(delta)     // use 1 more ancilla qubit + (logn - 1) ancilla(for increment)
# TOF += (18*logn + 22) * sum_1
TOF += (_sage_const_3 *logn + _sage_const_1 ) * sum_1

#TOF += sum_1                                # a <- TOF(v[0], g[0], a)
TOF += _sage_const_0 

TOF += sum_lambda + sum_1                   # r <- TOF(g[0], v[lambda...0], r[lambda...0])

CNOT += _sage_const_0                                    # g <- LEFTROTATE(g[n...0])

print("TOF_new :", TOF * _sage_const_2 )
print("CNOT_new :", CNOT * _sage_const_2 )

TOF_new = TOF * _sage_const_2 
CNOT_new = CNOT * _sage_const_2 

############## Original Resource Measurement ###############

sum_1 = _sage_const_2 *n - _sage_const_1 
sum_Lambda = _sage_const_3 /_sage_const_2 *n**_sage_const_2  - _sage_const_3 /_sage_const_2 *n
sum_lambda = _sage_const_3 /_sage_const_2 *n**_sage_const_2  - _sage_const_1 /_sage_const_2 *n

TOF = _sage_const_0 
CNOT = _sage_const_0 

# for i in range(2*n - 1):
CNOT += _sage_const_0                                    # v <- RIGHTSHIFT(v)
TOF += _sage_const_1  * sum_1                            # a <- TOF(sign, g[0], a)
CNOT += (logn + _sage_const_2 ) * sum_1                  # delta <- CNOT(delta, a)

CNOT += _sage_const_2  * (sum_Lambda + sum_1)            # f, g <- CSWAP_a(f[Lambda...0],g[Lambda...0])
TOF += (sum_Lambda + sum_1)

CNOT += _sage_const_2  * (sum_lambda + sum_1)            # v, r <- CSWAP_a(v[lambda...0],r[lambda...0])
TOF += (sum_lambda + sum_1)

CNOT += (_sage_const_2 *logn + _sage_const_3 ) * sum_1                # delta <- INC_(1+a)(delta)
TOF += (_sage_const_22 *logn + _sage_const_26 ) * sum_1


CNOT += sum_1                               # a <- CNOT(a,v[0])

CNOT += sum_1                               # g_0[l] <- CNOT(g[0], g_0[l])

TOF += sum_Lambda + sum_1                   # g <- TOF(g_0[l], f[Lambda...0], g[Lambda...0])
TOF += sum_lambda + sum_1                   # r <- TOF(g_0[l], v[lambda...0], r[lambda...0])

CNOT += _sage_const_0                                    # g <- LEFTSHIFT(g[Lambda...0])

print("TOF_origin :", TOF * _sage_const_2 )
print("CNOT_origin :", CNOT * _sage_const_2 )

TOF_origin = TOF * _sage_const_2 
CNOT_origin = CNOT * _sage_const_2 

print("TOF_diff :", TOF_new - TOF_origin)
print("CNOT_diff :", CNOT_new - CNOT_origin)

